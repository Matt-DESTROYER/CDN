function applyOperations(e){let n=(e=(e=e.replace("+",'<span class="code-operation">+</span>')).replace("*",'<span class="code-operation">*</span>')).match(/([a-zA-Z0-9]|\)) *\/ *([a-zA-Z0-9]|\()/g);if(n&&n.length>0){let a,t;for(let l=0;l<n.length;l++)a=e.substring(0,e.indexOf(n[l])+1),t=e.substring(e.indexOf(n[l])+1).replace("/",'<span class="code-operation">/</span>'),e=a+t}return e}function applyVariables(e){let n=e.match(/\([_a-zA-Z][_0-9a-zA-Z]*\)/g);if(n&&n.length>0)for(let a=0;a<n.length;a++)n[a].length<3?n.splice(a,1):(n[a]=n[a].replace(/(\(|\))/g,""),n.indexOf(n[a])===a&&(e=e.replace(n[a],'<span class="code-variable">'+n[a]+"</span>")));if((n=e.match(/(function|let|var|const) +[_a-zA-Z][_0-9a-zA-Z]*/g))&&n.length>0)for(let a=0;a<n.length;a++)if(n.indexOf(n[a])===a){n[a]=n[a].replace(/(var|let|const|function) /g,"");let t=new RegExp("( *|\\[|\\(|\\)|\\+|-|\\*|\\/|=)"+n[a].toString()+"( +|\\(|\\)\\[|\\]|\\+|-|\\/|\\*|;)","g"),l=e.match(t);if(l&&l.length>0)for(let s=0;s<l.length;s++)l.indexOf(l[s])===s&&(l[s].replace(/(\(|\)|\+|-|\*|\/)/g,""),l[s].indexOf("(")>-1?1===l[s].match(/\(/g).length?e=e.replace(t,' <span class="code-variable">'+n[a]+"</span>("):n[a]:e=l[s].indexOf(";")>-1?e.replace(t,' <span class="code-variable">'+n[a]+"</span>;"):e.replace(t,' <span class="code-variable">'+n[a]+"</span> "))}return e}function applyKeywords(e){return["abstract","arguments","await","boolean","break","byte","case","catch","char","class","const","continue","debugger","default","delete","do","double","else","enum","eval","export","extends","false","final","finally","float","for","function","goto","if","implements","import","in","instanceof","int","interface","let","long","native","new","null","package","private","protected","public","return","short","static","super","switch","synchronized","this","throw","throws","transient","true","try","typeof","var","void","volatile","while","with","yield"].forEach(n=>e=e.replace(n,'<span class="code-keyword">'+n+"</span>")),e}function applyNumbers(e){let n=e.match(/[0-9]+?(\.[0-9]+)?/g);return n&&n.forEach((a,t)=>{n.indexOf(a)===t&&(e=e.replace(a,'<span class="code-number">'+a+"</span>"))}),e}function codifyJS(e){let n;return(n=(e=(e=(e=e.split("<br>").join("\n")).split("<").join("&lt;")).split(">").join("&gt;")).match(/(".*?")|('.*?')|(`.*?(`|\${))|(}.*?(`|\${))/g))&&n.forEach(n=>e=e.replace(n,'<span class="code-string">'+n+"</span>")),(n=(e=applyKeywords(e=applyVariables(e))).match(/\/\*.*?\*\//s))&&n.forEach(n=>e=e.replace(n,'<span class="code-comment">'+n+"</span>")),(n=e.match(/\/\/.*?($|\n|<br>)/m))&&n.forEach(n=>e=e.replace(n,'<span class="code-comment">'+n+"</span>")),e=applyNumbers(e=applyOperations(e))}function removeSpans(e){return e.replace(/<span.*?>.*?<\/span>/g,"")}function removeInnerHtml(e){return e.replace(/(<.*?>|<\/.*?)/g)}function cleanInner(e){return e=(e=(e=(e=(e=(e=(e=e.split(/<span.*?>/g).join("")).split("</span>").join("")).split(/<font.*?>/g).join("")).split("</font>").join("")).split(/<div.*?>/g).join("<br>")).split("</div>").join("")).split("<br><br>").join("<br>")}
