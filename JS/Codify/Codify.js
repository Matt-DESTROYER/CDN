function applyOperations(e){let a=(e=(e=e.replace("+",'<span class="code-operation">+</span>')).replace("*",'<span class="code-operation">*</span>')).match(/([a-zA-Z0-9]|\)) *\/ *([a-zA-Z0-9]|\()/g);if(a&&a.length>0){let n,r;for(let t=0;t<a.length;t++)n=e.substring(0,e.indexOf(a[t])+1),r=e.substring(e.indexOf(a[t])+1).replace("/",'<span class="code-operation">/</span>'),e=n+r}return e}function applyVariables(e){let a=e.match(/\([_a-zA-Z][_0-9a-zA-Z]*\)/g);if(a&&a.length>0)for(let n=0;n<a.length;n++)a[n].length<3?a.splice(n,1):(a[n]=a[n].replace(/(\(|\))/g,""),a.indexOf(a[n])===n&&(e=e.replace(a[n],'<span class="code-variable">'+a[n]+"</span>")));if((a=e.match(/(function|let|var|const) +[_a-zA-Z][_0-9a-zA-Z]*/g))&&a.length>0)for(let n=0;n<a.length;n++)if(a.indexOf(a[n])===n){a[n]=a[n].replace(/(var|let|const|function) /g,"");let r=new RegExp("( *|\\[|\\(|\\)|\\+|-|\\*|\\/|=)"+a[n].toString()+"( +|\\(|\\)\\[|\\]|\\+|-|\\/|\\*|;)","g"),t=e.match(r);if(t&&t.length>0)for(let l=0;l<t.length;l++)t.indexOf(t[l])===l&&(t[l].replace(/(\(|\)|\+|-|\*|\/)/g,""),t[l].indexOf("(")>-1?1===t[l].match(/\(/g).length?e=e.replace(r,' <span class="code-variable">'+a[n]+"</span>("):a[n]:e=t[l].indexOf(";")>-1?e.replace(r,' <span class="code-variable">'+a[n]+"</span>;"):e.replace(r,' <span class="code-variable">'+a[n]+"</span> "))}return e}function applyKeywords(e){return["abstract","arguments","await","boolean","break","byte","case","catch","char","class","const","continue","debugger","default","delete","do","double","else","enum","eval","export","extends","false","final","finally","float","for","function","goto","if","implements","import","in","instanceof","int","interface","let","long","native","new","null","package","private","protected","public","return","short","static","super","switch","synchronized","this","throw","throws","transient","true","try","typeof","var","void","volatile","while","with","yield"].forEach(a=>e=e.replace(a,'<span class="code-keyword">'+a+"</span>")),e}function applyNumbers(e){let a=e.match(/[0-9]+?(\.[0-9]+)?/g);return a&&a.forEach((n,r)=>{a.indexOf(n)===r&&(e=e.replace(n,'<span class="code-number">'+n+"</span>"))}),e}function codifyJS(e){let a;return(a=(e=(e=(e=e.replace("<br>","\n")).replace("<","&lt;")).replace(">","&gt;")).match(/(".*?")|('.*?')|(`.*?(`|\${))|(}.*?(`|\${))/g))&&a.forEach(a=>e=e.replace(a,'<span class="code-string">'+a+"</span>")),(a=(e=applyKeywords(e=applyVariables(e))).match(/\/\*.*?\*\//s))&&a.forEach(a=>e=e.replace(a,'<span class="code-comment">'+a+"</span>")),(a=e.match(/\/\/.*?($|\n|<br>)/m))&&a.forEach(a=>e=e.replace(a,'<span class="code-comment">'+a+"</span>")),"<pre>"+(e=applyNumbers(e=applyOperations(e)))+"</pre>"}function removeSpans(e){return e.replace(/<span.*?>.*?<\/span>/g,"")}function removeInnerHtml(e){return e.replace(/(<.*?>|<\/.*?)/g)}function cleanInner(e){return e=(e=(e=(e=(e=(e=(e=e.replace(/<span.*?>/g,"")).replace("</span>","")).replace(/<font.*?>/g,"")).replace("</font>","")).replace(/<div.*?>/g,"<br>")).replace("</div>","")).replace("<br><br>","<br>")}
