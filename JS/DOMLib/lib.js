const GET=e=>new Promise((t,s)=>{const a=new XMLHttpRequest;a.open("GET",e,!0),a.send(null),a.onreadystatechange=(()=>{if(4===a.readyState&&200===a.status){1!==a.getResponseHeader("Content-Type").indexOf("text")&&t(a.responseText)}else 4===a.readyState&&t(a)})});class Page{constructor(e,t,s){this.title=e,this.htmlDirectory=t,this.htmlPartialLoaded=!1,GET(this.htmlDirectory).then(e=>{this.htmlPartial=e,this.htmlPartialLoaded=!0}),this.jsControllerDirectory=s,this.jsControllerLoaded=!1,GET(this.jsControllerDirectory).then(e=>{this.jsController=e,this.jsControllerLoaded=!0})}}class DOMLibInstance{constructor(e){this.$appName=e,this.$pages=[],this.Page="",this.onload=function(){}}GetPage(e){for(let t=0;t<this.$pages.length;t++)if(this.$pages[t].title===e)return this.$pages[t];return null}CreatePage(e,t,s){this.$pages.push(new Page(e,t,s))}Render(e){if(!(this.$pages.length>0))throw new Error("["+this.$appName+"] No pages created, create at least one page before rendering the page.");this.Page=this.GetPage(e).title||this.$pages[0].title;const t=this.GetPage(this.Page);if(!t.htmlPartialLoaded||!t.jsControllerLoaded)throw new Error("["+this.$appName+"] Page cannot be rendered, content not yet loaded. (Use "+this.$appName+".onload to ensure page contents are not used before loaded.)");document.getElementByTagName("body")[0].innerHTML=t.htmlPartial+"\n<script>"+t.jsController+"<\/script>"}}const DOMLib={Init:e=>new DOMLibInstance(e)};
