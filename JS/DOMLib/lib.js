const GET=e=>new Promise((t,a)=>{const s=new XMLHttpRequest;s.open("GET",e,!0),s.send(null),s.onreadystatechange=(()=>{if(4===s.readyState&&200===s.status){1!==s.getResponseHeader("Content-Type").indexOf("text")&&t(s.responseText)}})});class Page{constructor(e,t,a){this.title=e,this.htmlDirectory=t,this.htmlPartialLoaded=!1,GET(this.htmlDirectory).then(e=>{this.htmlPartial=e,this.htmlPartialLoaded=!0}),this.jsControllerDirectory=a,this.jsControllerLoaded=!1,GET(this.jsControllerDirectory).then(e=>{this.jsController=e,this.jsControllerLoaded=!0})}}const DOMLib={Init:e=>({$appName:e,$pages:[],onload:()=>{},GetPage:e=>{for(let t=0;t<$pages.length;t++)if($pages[t].title===e)return $pages[t];return null},Page:"",CreatePage:(e,t,a)=>this.$pages.push(new Page(e,t,a,this)),Render:e=>{if(!(this.$pages.length>0))throw new Error("["+this.$appName+"] No pages created, create at least one page before rendering the page.");this.Page=this.$pages.includes(e)?e:this.$pages[0];const t=this.GetPage(this.Page);if(t.htmlPartialLoaded&&t.jsControllerLoaded)throw new Error("["+this.$appName+"] Page cannot be rendered, content not yet loaded. (Use "+this.$appName+".onload to ensure page contents are not used before loaded.)");document.getElementByTagName("body")[0].innerHTML=t.htmlPartial+"\n<script>"+t.jsController+"<\/script>"}})};
